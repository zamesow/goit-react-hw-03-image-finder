{"version":3,"sources":["components/ImageGallery/ImageGallery.module.css","components/Button/Button.js","components/ImageGalleryItem/ImageGalleryItem.js","components/ImageGallery/ImageGallery.js","components/ImageInfo/ImageInfo.js","components/Searchbar/Searchbar.js","App.js","index.js","components/Searchbar/Searchbar.module.css","components/ImageGalleryItem/ImageGalleryItem.module.css"],"names":["module","exports","Button","scroll","e","props","onClick","window","scrollTo","top","document","documentElement","scrollHeight","behavior","console","log","target","this","className","type","Component","ImageGalleryItem","photo","id","webformatURL","mc","src","alt","ImageGallery","photos","children","map","ImageInfo","state","status","error","page","onClickLoadMore","setState","prevState","prevProps","prevTag","tagToSearchProps","newTag","fetch","then","res","ok","json","Promise","reject","Error","nextPhotos","hits","catch","style","textAlign","Searchbar","tagToSearch","handleTagChange","currentTarget","value","toLowerCase","handleSubmit","preventDefault","trim","onSubmit","alert","SearchForm","autoComplete","autoFocus","placeholder","onChange","App","handleFormSubmit","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.21b22d40.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGallery\":\"ImageGallery_ImageGallery__DncjJ\"};","import React, { Component } from 'react';\n\nexport default class Button extends Component {\n  scroll = e => {\n    this.props.onClick();\n\n    window.scrollTo({\n      top: document.documentElement.scrollHeight,\n      behavior: 'smooth',\n    });\n    console.log(e.target);\n  };\n\n  render() {\n    return (\n      <div>\n        <button onClick={this.scroll} className=\"Button\" type=\"button\">\n          Load more\n        </button>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport mc from './ImageGalleryItem.module.css';\n\nexport default function ImageGalleryItem({ photo }) {\n  const { id, webformatURL } = photo;\n  //   this.props.photo(photo);\n  return (\n    <div>\n      <ul className={mc['ImageGalleryItem-container']}>\n        <li className={mc.ImageGalleryItem}>\n          <img\n            src={webformatURL}\n            alt={id}\n            className={mc['ImageGalleryItem-image']}\n          />\n        </li>\n      </ul>\n    </div>\n  );\n}\n\n// note 8. принимаем пропс и достаём из него нужные свойства\n// присваиваем каждому <li> свой ключ\n// присваиваем данные src и alt\n","import ImageGalleryItem from '../ImageGalleryItem/';\nimport mc from './ImageGallery.module.css';\n\nexport default function ImageGallery({ photos, children }) {\n  //   const { hits } = photos;\n\n  return (\n    <div>\n      <ul className={mc.ImageGallery}>\n        {photos.map(photo => (\n          <li key={photo.id}>\n            <ImageGalleryItem photo={photo} />\n          </li>\n        ))}\n      </ul>\n      {children}\n    </div>\n  );\n}\n\n// note 7. принимаем наш объект и достаём из него массив объектов\n// 'эмапим его на части и возвращаем разметку из <ImageGalleryItem photo={hit} />\n// 'отправляем пропс с одной картинкой и её данными\n","import React, { Component } from 'react';\nimport Button from '../Button';\nimport ImageGallery from '../ImageGallery';\n// import ImagePendingView from '../ImagePendingView';\n// import pixabayAPI from '../services/pixabay-api';\n\nexport default class ImageInfo extends Component {\n  state = {\n    photos: null,\n    status: 'idle',\n    error: '',\n    page: 1,\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    const prevTag = prevProps.tagToSearchProps;\n    const newTag = this.props.tagToSearchProps;\n    const { page } = this.state;\n\n    const apiKey = '18749198-d021e8b49b5886c25ed273569';\n\n    if (prevTag !== newTag) {\n      console.log(`Было: ${prevTag}`);\n      console.log(`Стало: ${newTag}`);\n      console.log(this.state.photos);\n      console.log(this.state.page);\n\n      this.setState({ status: 'pending' });\n\n      fetch(\n        `https://pixabay.com/api/?q=${newTag}&page=${page}&key=${apiKey}&image_type=photo&orientation=horizontal&per_page=12`,\n      )\n        .then(res => {\n          if (res.ok) {\n            return res.json();\n          }\n\n          return Promise.reject(\n            new Error(`По запросу ${newTag} фото отсутствуют`),\n          );\n        })\n        .then(nextPhotos => {\n          this.setState(prevState => ({\n            photos: { ...prevState.photos, ...nextPhotos },\n            status: 'resolved',\n          }));\n          console.log(nextPhotos.hits);\n        })\n        .catch(error => this.setState({ error, status: 'rejected' }));\n    }\n  }\n\n  onClickLoadMore = () => {\n    this.setState(prevState => ({\n      page: prevState.page + 1,\n    }));\n    console.log(this.state.page + 1);\n  };\n\n  render() {\n    const { status, photos } = this.state;\n    // const { tagToSearch } = this.props;\n\n    if (status === 'idle') {\n      return <div style={{ textAlign: 'center' }}>Let's find something?</div>;\n    }\n\n    if (status === 'pending') {\n      return <div style={{ textAlign: 'center' }}>Ищем...</div>;\n      //   return <ImagePendingView />;\n    }\n\n    if (status === 'resolved') {\n      return (\n        <ImageGallery photos={photos.hits}>\n          <Button onClick={this.onClickLoadMore} />\n        </ImageGallery>\n      );\n    }\n\n    // if (status === 'rejected') {\n    //   return <div style={{ textAlign: 'center' }}>{error.message}</div>;\n    // }\n  }\n}\n\n// загрузка cтраницы 2\n// модалка\n\n// note 4. Отправка запроса (каждый шаг проверяем с console.log)\n//  в стейт пишем свойство photos: null, для записи ответа от запроса\n// componentDidUpdate(prevProps, prevState) {}\n// обязательно наш запрос отправляем только при неравенстве if (prevTag !== newTag) {}\n// деструктуризируем prevTag и newTag из prevProps.имя и this.props.проп\n// пишем статус в стейт до запроса this.setState({ status: 'pending' });\n\n// note 5. проверка запроса fetch(`наш адрес`).then(res => res.json()).then(console.log);\n// 'проверка успешного запроса: .then(res => {if (res.ok) {return res.json();}...\n// 'возврат промиса в случае неуспешного: ...return Promise.reject(new Error(`По запросу ${newTag} фото отсутствуют`),);\n// ''записываем пришедший массив и успешный статус в стейт .then(photos => {this.setState({ photos, status: 'resolved' });})\n// '''ловим ошибку, записываем сообщение в стейт и меняем статус на неуспешный .catch(error => this.setState({ error, status: 'rejected' }));\n\n// note 6. рендер\n// 'рендерим при каждом статусе что-то своё: if (status === 'resolved') {}\n// 'при успехе рендерим нашу коллекцию фото и передаём в неё весь объект return <ImageGallery photos={photos} />;\n","import React, { Component } from 'react';\n// import ImageGallery from '../ImageGallery';\n// import ImageGalleryItem from '../ImageGalleryItem';\n// import Loader from '../Loader';\nimport mc from './Searchbar.module.css';\n\nexport default class Searchbar extends Component {\n  state = {\n    tagToSearch: '',\n  };\n\n  handleTagChange = e => {\n    this.setState({ tagToSearch: e.currentTarget.value.toLowerCase() });\n  };\n\n  handleSubmit = e => {\n    const { tagToSearch } = this.state;\n    e.preventDefault();\n\n    if (tagToSearch.trim() === '') {\n      alert('Введите тег для поиска картинки');\n\n      return;\n    }\n\n    this.props.onSubmit(tagToSearch);\n\n    this.setState({ tagToSearch: '' });\n  };\n\n  render() {\n    const { tagToSearch } = this.state;\n\n    return (\n      <div>\n        <header className={mc.Searchbar}>\n          <form className={mc.SearchForm} onSubmit={this.handleSubmit}>\n            <button type=\"submit\" className={mc['SearchForm-button']}>\n              <span className={mc['SearchForm-button-label']}>Search</span>\n            </button>\n\n            <input\n              className={mc['SearchForm-input']}\n              type=\"text\"\n              autoComplete=\"off\"\n              autoFocus\n              placeholder=\"Search images and photos\"\n              value={tagToSearch}\n              onChange={this.handleTagChange}\n            />\n          </form>\n        </header>\n      </div>\n    );\n\n    //\n    // if (status === 'pending') {\n    //   <Loader />;\n    // }\n\n    // if (status === 'rejected') {\n    //   return <ImageGalleryItem message={error.message} />;\n    // }\n  }\n}\n\n// note 1. отображение вводимого значения\n// создаём имя tagToSearch: '' в state, для записи вводимого текста в форму\n// ф-цию handleTagChange для записи в стейт по событию (нажатия)\n// onChange={this.handleTagChange} связываем наше событие с ф-цией\n// value={tagToSearch} нужно для отображения текущего (начального) значения в форме\n\n// note 2. передача значения в стейт App по сабмиту\n// ф-ция handleSubmit по событию\n// запрет на обновление\n// паттерн на alert по вводу пустого значения\n// вызов пропса с передачей нашего тега this.props.onSubmit(this.state.tagToSearch)\n// очищаем форму после сабмита this.setState({ tagToSearch: '' });\n// вешаем в сабмит формы нашу ф-цию\n// принимаем компонент <Searcbar /> в App\n","import React, { Component } from 'react';\n// import LoaderSpinner from './components/Loader';\nimport ImageInfo from './components/ImageInfo';\nimport Searchbar from './components/Searchbar';\n// import ImageGallery from './components/ImageGallery';\n// import Modal from './components/Modal';\nimport './App.module.css';\n\nclass App extends Component {\n  state = {\n    tagToSearch: '',\n    photos: 'тут должна быть фотка',\n    // status: 'idle',\n    // firstPage: 1,\n    // showModal: false,\n  };\n\n  handleFormSubmit = tagToSearch => {\n    this.setState({ tagToSearch, status: 'resolved' });\n    console.log(`Новый тег \"${tagToSearch}\" записан в стейт App`);\n  };\n\n  // toggleModal = () => {\n  //   this.setState(({ showModal }) => ({ showModal: !showModal }));\n  //\\\\   !this.state.showModal && console.log('Открыли модалку');\n  // };\n\n  render() {\n    const { tagToSearch } = this.state;\n\n    return (\n      <>\n        <Searchbar onSubmit={this.handleFormSubmit} />\n        <ImageInfo tagToSearchProps={tagToSearch} />\n        {/* <ImageGallery onSubmit={tagToSearch} /> */}\n        {/* {\n     <button type=\"button\" onTagProps={this.toggleModal}>\n          Открыть модалку\n        </button>\n\n        {this.state.showModal && <Modal onClose={this.toggleModal} />}\n        } */}\n      </>\n    );\n  }\n}\n\nexport default App;\n\n// добавить пропсы\n// сделать скелетон\n\n//  note 0. добавляем куда нужно стили и абсолютный экспорт\n\n// note 3. передача tagToSearch в стейт App\n// принимаем компонент <Searchbar />\n// передаём ему пропс c ссылкой на ф-цию handleFormSubmit с записью тега в стейт\n// создаём файл ImageInfo для запроса\n// передаём в него пропс с нашим записанным тегом tagToSearchProps={tagToSearch}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Searchbar\":\"Searchbar_Searchbar__DjWH3\",\"SearchForm\":\"Searchbar_SearchForm__1ac2l\",\"SearchForm-button\":\"Searchbar_SearchForm-button__3u-rY\",\"SearchForm-button-label\":\"Searchbar_SearchForm-button-label__2bzU3\",\"SearchForm-input\":\"Searchbar_SearchForm-input__j6qzO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGalleryItem\":\"ImageGalleryItem_ImageGalleryItem__3CvRl\",\"ImageGalleryItem-container\":\"ImageGalleryItem_ImageGalleryItem-container__QJ2AN\",\"ImageGalleryItem-image\":\"ImageGalleryItem_ImageGalleryItem-image__1C-z-\"};"],"sourceRoot":""}